{"title":"Docker 网络","uid":"ee6d2c39692a2e32a317cb32fe1cabc5","slug":"docker/docker3","date":"2023-02-14T12:55:41.000Z","updated":"2023-02-15T05:41:16.392Z","comments":true,"path":"api/articles/docker/docker3.json","keywords":null,"cover":"/img/docker/docker-cover.png","content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>《Docker 进阶与实战》</p></blockquote>\n<h1 id=\"网络模式\"><a href=\"#网络模式\" class=\"headerlink\" title=\"网络模式\"></a>网络模式</h1><p>Linux平台下，Docker容器网络资源通过内核的Network Namespace机制实现隔离，不同的Network Namespace有各自的网络设备、协议栈、路由表、防火墙规则等反之，同一Network Namespace下的进程共享同一网络视图。通过对NetworkNamespace的灵活操纵，Docker提供了五种容器网络模式，下面分别进行介绍</p>\n<h2 id=\"none\"><a href=\"#none\" class=\"headerlink\" title=\"none\"></a>none</h2><ul>\n<li>不配置网络，<code>docker run --net=host -it -d ubuntu bash</code> 中仅有回环地址。</li>\n</ul>\n<h2 id=\"container\"><a href=\"#container\" class=\"headerlink\" title=\"container\"></a>container</h2><ul>\n<li>与另一个运行中的容器共享Network Namespace。<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 设置加入一个hosename，指定DNS\nqidai@qidai:~$ docker run -h ohbugNet -it -d --dns 8.8.8.8 ubuntuip &#x2F;bin&#x2F;bash\nf9f11e7f62aa61160a93f5166435f360baaa66e605c48c548ebaaa2a135a0d3a\nqidai@qidai:~$ docker ps\nCONTAINER ID   IMAGE      COMMAND       CREATED              STATUS              PORTS     NAMES\nf9f11e7f62aa   ubuntuip   &quot;&#x2F;bin&#x2F;bash&quot;   About a minute ago   Up About a minute             busy_johnson\nqidai@qidai:~$ docker run --net&#x3D;container:busy_johnson -it -d  ubuntuip &#x2F;bin&#x2F;bash\nc74410c2acedf43368922aedd7dbbee7328f51b757eaf7b62e57a2bcc8c8074d\nqidai@qidai:~$ docker ps \nCONTAINER ID   IMAGE      COMMAND       CREATED              STATUS              PORTS     NAMES\nc74410c2aced   ubuntuip   &quot;&#x2F;bin&#x2F;bash&quot;   7 seconds ago        Up 6 seconds                  sharp_mendeleev\nf9f11e7f62aa   ubuntuip   &quot;&#x2F;bin&#x2F;bash&quot;   About a minute ago   Up About a minute             busy_johnson\n\nqidai@qidai:~$ docker exec -it busy_johnson ip a\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link&#x2F;loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1&#x2F;8 scope host lo\n       valid_lft forever preferred_lft forever\n97: eth0@if98: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default \n    link&#x2F;ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.17.0.2&#x2F;16 brd 172.17.255.255 scope global eth0\n       valid_lft forever preferred_lft forever\nqidai@qidai:~$ docker exec -it sharp_mendeleev ip a\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link&#x2F;loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1&#x2F;8 scope host lo\n       valid_lft forever preferred_lft forever\n97: eth0@if98: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default \n    link&#x2F;ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.17.0.2&#x2F;16 brd 172.17.255.255 scope global eth0\n       valid_lft forever preferred_lft forever\nqidai@qidai:~$ docker exec -it busy_johnson cat &#x2F;etc&#x2F;resolv.conf\nsearch mshome.net\nnameserver 8.8.8.8</code></pre></li>\n<li>可以看到，使用<code>--net=container: busy_johnson</code>参数启动的容器，其IP地址DNS、hostname都继承了容器busy_johnson。实质上两个容器是共享同一个Network自然网络配置也是完全相同的Namespace的。</li>\n</ul>\n<h2 id=\"host\"><a href=\"#host\" class=\"headerlink\" title=\"host\"></a>host</h2><ul>\n<li>容器有完整的权限可以操纵主机host，与主机共享Root Network Namespace的协议栈、路由表和 防火墙等，所以被认为是不安全的。</li>\n</ul>\n<h2 id=\"bridge\"><a href=\"#bridge\" class=\"headerlink\" title=\"bridge\"></a>bridge</h2><ul>\n<li>Docker的Net模式。Docker daemon启动时会在主机创建一个Linux网桥(默认为docker0，可通过-b参数手动指定)。容器启动时，Docker会创建一对veth pair (虚拟网络接口)设备，veth设备的特点是成对存在，从一端进入的数据会同时出现在另一端。Docker会将一端挂载到docker0网桥上，另一端放入容器的Network Namespace内，从而实现容器与主机通信的目的。</li>\n</ul>\n<p><img src=\"/img/docker/dockerbridge.png\" alt=\"picture 1\">  </p>\n<ul>\n<li>在桥接模式下，Docker容器与Internet的通信，以及不同容器之间的通信，都是通过iptables规则控制的。</li>\n</ul>\n<h2 id=\"overlay\"><a href=\"#overlay\" class=\"headerlink\" title=\"overlay\"></a>overlay</h2><ul>\n<li>跨主机多子网模型。</li>\n<li>overlay网络模型比较复杂，底层需要类似consul或etcd的KV存储系统进行消息同步，核心是通过Linux网桥与vxlan隧道实现跨主机划分子网。</li>\n<li>如图5-3所示，每创建一个网络，Docker会在主机上创建一个单独的沙盒，沙盒的实现实质上是一个Network Namespace。在沙盒中，Docker会创建名为br0的网桥，并在网桥上增加一个vxlan接口，每个网络占用一个vxlanID，当前Docker创建vxlan隧道的ID范围为256~1000，因而最多可以创建745个网络。当添加一个容器到某一个网络上时，Docker会创建一对veth网卡设备，一端连接到此网络相关沙盒内的br0网桥上，另一端放入容器的沙盒内，并设置bro的IP地址作为容器内路由默认的网关地址，从而实现容器加入网络的目的。</li>\n</ul>\n<p><img src=\"/img/docker/docker-overlay.png\" alt=\"picture 2\">  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 联通两个容器。通过互相添加hosts文件实现。通过  --link 指定要连接的容器\nqidai@qidai:~$ docker run -d -it --name c1 ubuntu bash\n4227d662dc29839b6a3e6dcfaa7ca6d8eda6ec0c0e91db50bf98d4148c570b78\nqidai@qidai:~$ docker run -d -it --name c2 --link&#x3D;c1 ubuntu bash\n43496a8a833c472510e785c8ba619a32a0acab374bd10c659c21850070f89f96\nqidai@qidai:~$ docker ps\nCONTAINER ID   IMAGE     COMMAND   CREATED          STATUS          PORTS     NAMES\n43496a8a833c   ubuntu    &quot;bash&quot;    3 seconds ago    Up 2 seconds              c2\n4227d662dc29   ubuntu    &quot;bash&quot;    51 seconds ago   Up 50 seconds             c1</code></pre>","abstracts":"Docker 网络知识","text":"Docker 网络知识","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"Docker","slug":"Docker","count":4,"path":"api/categories/Docker.json"}],"tags":[{"name":"Docker","slug":"Docker","count":4,"path":"api/tags/Docker.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">网络模式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#none\"><span class=\"toc-text\">none</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#container\"><span class=\"toc-text\">container</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#host\"><span class=\"toc-text\">host</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#bridge\"><span class=\"toc-text\">bridge</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#overlay\"><span class=\"toc-text\">overlay</span></a></li></ol></li></ol>","author":{"name":"Qidai","slug":"blog-author","avatar":"/img/v2-b98d05a15e22949b1a1c70d453fb71ed_720w.jpg","link":"/","description":"吃喝，死宅，折腾","socials":{"github":"https://github.com/ziqiang-wang-chn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/291152218"},"mail":{"icon":"/svg/mail.svg","link":"mailto:ziqiang_wang_chn@163.com"},"rss":{"icon":"/svg/RSS.svg","link":"https://ohbug.cn/atom.xml"}}}},"mapped":true,"prev_post":{"title":"Docker 卷","uid":"a96f355e941f50f70bc1a882e3391dcd","slug":"docker/docker4","date":"2023-02-15T05:54:41.000Z","updated":"2023-02-15T08:30:07.604Z","comments":true,"path":"api/articles/docker/docker4.json","keywords":null,"cover":"/img/docker/docker-cover.png","text":"Docker 卷知识","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"Docker","slug":"Docker","count":4,"path":"api/categories/Docker.json"}],"tags":[{"name":"Docker","slug":"Docker","count":4,"path":"api/tags/Docker.json"}],"author":{"name":"Qidai","slug":"blog-author","avatar":"/img/v2-b98d05a15e22949b1a1c70d453fb71ed_720w.jpg","link":"/","description":"吃喝，死宅，折腾","socials":{"github":"https://github.com/ziqiang-wang-chn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/291152218"},"mail":{"icon":"/svg/mail.svg","link":"mailto:ziqiang_wang_chn@163.com"},"rss":{"icon":"/svg/RSS.svg","link":"https://ohbug.cn/atom.xml"}}}}},"next_post":{"title":"Dockerfile","uid":"75603112ad785d198fb30f0b34b1d632","slug":"docker/docker2","date":"2023-02-13T14:27:41.000Z","updated":"2023-02-14T09:11:19.572Z","comments":true,"path":"api/articles/docker/docker2.json","keywords":null,"cover":"/img/docker/docker-cover.png","text":"Dockerfile知识总结","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"Docker","slug":"Docker","count":4,"path":"api/categories/Docker.json"}],"tags":[{"name":"Docker","slug":"Docker","count":4,"path":"api/tags/Docker.json"}],"author":{"name":"Qidai","slug":"blog-author","avatar":"/img/v2-b98d05a15e22949b1a1c70d453fb71ed_720w.jpg","link":"/","description":"吃喝，死宅，折腾","socials":{"github":"https://github.com/ziqiang-wang-chn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/291152218"},"mail":{"icon":"/svg/mail.svg","link":"mailto:ziqiang_wang_chn@163.com"},"rss":{"icon":"/svg/RSS.svg","link":"https://ohbug.cn/atom.xml"}}}}}}