{"title":"MySQL - 索引","uid":"db4d44c0ea1308c9e8989aac4272f703","slug":"mysql/mysql1","date":"2023-02-08T14:58:37.000Z","updated":"2023-02-08T15:25:54.069Z","comments":true,"path":"api/articles/mysql/mysql1.json","keywords":null,"cover":"/img/mysql/mysqlmust.jpg","content":"<h1 id=\"常用索引模型\"><a href=\"#常用索引模型\" class=\"headerlink\" title=\"常用索引模型\"></a>常用索引模型</h1><ul>\n<li>哈希表：既然涉及到了Hash，则最快的效率一定是直接可以根据Hash进行定位。但是难免会有冲突的时候，冲突的时候会链接成链表，此时若链表很长，且若链表内的信息都无序，若要查找一个特定的值，或查找一个区间内的值，则只能遍历，则查询效率也是很低的。所以<strong>哈希表这种结构适用于只有等值查询的场景</strong>。</li>\n<li>有序数组：<strong>有序数组在等值查询和范围查询场景中的性能就都非常优秀</strong>，因为是有序的，所以查找一个值可以用二分查找，若再区间内查值，因为是有序的，则也可以使用二分查找，但是对于数据频繁插入的时期下，数组元素的移动是相当耗费时间的。所以<strong>有序数组索引只适用于静态存储引擎</strong>。</li>\n<li>搜索树：最直接的就想到了二叉平衡查找树，但是若树深20，则每次查找一个值，都平均需要比较20次才会找到一个值，查询效率也不是很高，所以引入了多叉树，越多叉越能够减少比较次数。所以多叉树广泛应用到数据库中。</li>\n</ul>\n<h1 id=\"InnoDB的索引模型\"><a href=\"#InnoDB的索引模型\" class=\"headerlink\" title=\"InnoDB的索引模型\"></a>InnoDB的索引模型</h1><ul>\n<li>InnoDB中使用了 B+ 树，每个索引在 InnoDB 中都对应一颗树。</li>\n<li>B+树的叶子节点是page （页），一个页里面可以存多个行。页内部有个有序数组，二分法进行查找匹配行。</li>\n<li>比如下面一张表</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">create table T(\nid int primary key,\nk int not null,\nindex (k))engine&#x3D;InnoDB;\n-- data: (100,1)、(200,2)、(300,3)、(500,5) 和 (600,6)</code></pre>\n\n<ul>\n<li>对应的结构为</li>\n</ul>\n<p><img src=\"/img/mysql/innodb-index.png\" alt=\"picture 1\">  </p>\n<h2 id=\"基于主键索引和普通索引的查询区别\"><a href=\"#基于主键索引和普通索引的查询区别\" class=\"headerlink\" title=\"基于主键索引和普通索引的查询区别\"></a>基于主键索引和普通索引的查询区别</h2><ul>\n<li><strong>主键索引</strong>只要搜索ID这个B+Tree即可拿到数据。</li>\n<li><strong>普通索引</strong>先搜索索引拿到主键值，再到主键搜索ID索引树搜索一次(回表)。共查询两次。</li>\n</ul>\n<p><img src=\"/img/mysql/b+tree.png\"></p>\n<h2 id=\"索引维护\"><a href=\"#索引维护\" class=\"headerlink\" title=\"索引维护\"></a>索引维护</h2><ul>\n<li>因为B+树的特性，如果索引是比较有序的，如数据库中得自增ID，则B+树每次插入一条新记录，都是追加操作，都不涉及到挪动其他记录，也不会触发叶子节点的分裂，这样效率是很高的。</li>\n<li>若索引插入是比较无序的，比如某个业务的id作为索引，会造成数据的频繁挪动，甚至分裂出其他的分支，这个过程称为页分裂。页分裂操作还影响数据页的利用率。原本放在一个页的数据，现在分到两个页中，整体空间利用率降低大约 50%。</li>\n<li><strong>综上</strong>，则插入的索引有序是十分有利的。<strong>自增主键往往是更合理的选择，且建议设置为bigint unsigned</strong>。</li>\n<li>如果删除再新建主键索引，它会使得所有的二级索引都失效，并且会用ROWID来作主键索引，性能消耗比较大。删除再重建普通索引貌似影响不大，不过要注意在业务低谷期操作，避免影响业务。</li>\n</ul>\n","abstracts":"参考极客时间课程《MySQL实战45讲》","text":"参考极客时间课程《MySQL实战45讲》","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"MySQL","slug":"MySQL","count":1,"path":"api/categories/MySQL.json"}],"tags":[{"name":"MySQL","slug":"MySQL","count":2,"path":"api/tags/MySQL.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E7%B4%A2%E5%BC%95%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">常用索引模型</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#InnoDB%E7%9A%84%E7%B4%A2%E5%BC%95%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">InnoDB的索引模型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E4%BA%8E%E4%B8%BB%E9%94%AE%E7%B4%A2%E5%BC%95%E5%92%8C%E6%99%AE%E9%80%9A%E7%B4%A2%E5%BC%95%E7%9A%84%E6%9F%A5%E8%AF%A2%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">基于主键索引和普通索引的查询区别</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%B4%A2%E5%BC%95%E7%BB%B4%E6%8A%A4\"><span class=\"toc-text\">索引维护</span></a></li></ol></li></ol>","author":{"name":"Qidai","slug":"blog-author","avatar":"/img/v2-b98d05a15e22949b1a1c70d453fb71ed_720w.jpg","link":"/","description":"吃喝，死宅，折腾","socials":{"github":"https://github.com/ziqiang-wang-chn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/291152218"},"mail":{"icon":"/svg/mail.svg","link":"mailto:ziqiang_wang_chn@163.com"},"rss":{"icon":"/svg/RSS.svg","link":"https://ohbug.cn/atom.xml"}}}},"mapped":true,"prev_post":{"title":"Dockerfile","uid":"75603112ad785d198fb30f0b34b1d632","slug":"docker/docker2","date":"2023-02-13T14:27:41.000Z","updated":"2023-02-14T09:11:19.572Z","comments":true,"path":"api/articles/docker/docker2.json","keywords":null,"cover":"/img/docker/docker-cover.png","text":"Dockerfile知识总结","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"Docker","slug":"Docker","count":4,"path":"api/categories/Docker.json"}],"tags":[{"name":"Docker","slug":"Docker","count":4,"path":"api/tags/Docker.json"}],"author":{"name":"Qidai","slug":"blog-author","avatar":"/img/v2-b98d05a15e22949b1a1c70d453fb71ed_720w.jpg","link":"/","description":"吃喝，死宅，折腾","socials":{"github":"https://github.com/ziqiang-wang-chn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/291152218"},"mail":{"icon":"/svg/mail.svg","link":"mailto:ziqiang_wang_chn@163.com"},"rss":{"icon":"/svg/RSS.svg","link":"https://ohbug.cn/atom.xml"}}}}},"next_post":{"title":"Spring6-AOP","uid":"30fb76edd6cb328c4c2c75f78ac58f78","slug":"spring/spring6-4","date":"2023-02-08T02:31:46.000Z","updated":"2023-02-08T07:46:36.424Z","comments":true,"path":"api/articles/spring/spring6-4.json","keywords":null,"cover":"/img/spring/OG-Spring.png","text":"AOP概念及注解使用。","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"Spring6","slug":"Spring6","count":4,"path":"api/categories/Spring6.json"}],"tags":[{"name":"Spring6","slug":"Spring6","count":4,"path":"api/tags/Spring6.json"}],"author":{"name":"Qidai","slug":"blog-author","avatar":"/img/v2-b98d05a15e22949b1a1c70d453fb71ed_720w.jpg","link":"/","description":"吃喝，死宅，折腾","socials":{"github":"https://github.com/ziqiang-wang-chn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/291152218"},"mail":{"icon":"/svg/mail.svg","link":"mailto:ziqiang_wang_chn@163.com"},"rss":{"icon":"/svg/RSS.svg","link":"https://ohbug.cn/atom.xml"}}}}}}